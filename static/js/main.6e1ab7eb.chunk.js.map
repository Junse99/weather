{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","common/api.js","common/apiInfo.js","Utilities/theme.js","components/CardDay.js","components/CardFrance.js","Utilities/capitalize.js","components/CardMain.js","Utilities/getCountry.js","Utilities/getIcon.js","Utilities/getNumberRound.js","layouts/Main.js","Utilities/getPronosthic.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiUrl","url","data","formData","dataBody","FormData","Object","keys","map","key","Array","isArray","forEach","item","isFile","size","isJson","append","JSON","stringify","fetch","method","headers","body","response","a","json","payload","catch","err","params","URL","searchParams","q","appid","process","lang","units","getTheme","theme","temperature","limit","console","log","CardDay","area","description","date","icon","className","style","gridArea","src","CardFrance","country","city","capitalize","word","toUpperCase","slice","CardMain","Date","now","toDateString","getCountry","getIcon","parseInt","Math","round","parseFloat","getNumberRound","number","Main","useState","info","setInfo","infoFrance","setInfoFrance","infoPronosthic","setInfoPronosthic","useEffect","api","get","res","pronosthic","day1","day2","day3","list","dt_txt","dateNow","getDate","length","main","temp","weather","getPronostic","name","sys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e1ab7eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//const apiUrl = 'http://localhost:4000'\r\nconst apiUrl = 'http://api.openweathermap.org'\r\nexport class Api {\r\n\r\n  post(url, data, formData) {\r\n    let dataBody\r\n\r\n    if (formData) {\r\n      dataBody = new FormData();\r\n      Object.keys(data).map(key => {\r\n\r\n        if (!Array.isArray(data[key])) {\r\n          const isFile = data[key] && data[key].size\r\n          const isJson = typeof data[key] === 'object'\r\n\r\n          dataBody.append(key, isFile || !isJson ? data[key] : JSON.stringify(data[key]));\r\n        } else\r\n          data[key].forEach(item => {\r\n            const isFile = item && item.size\r\n            const isJson = typeof item === 'object'\r\n\r\n            dataBody.append(key, isFile || !isJson ? item : JSON.stringify(item))\r\n          })\r\n      })\r\n    } else\r\n      dataBody = JSON.stringify(data);\r\n\r\n    return fetch(`${apiUrl}${url}`, {\r\n      method: 'POST',\r\n      headers: (formData ? {\r\n      } : {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json',\r\n        }),\r\n      body: dataBody\r\n    }).then(async response => {\r\n      response.payload = await response.json()\r\n      return response;\r\n    }).catch(err => err)\r\n  }\r\n\r\n  put(url, data, formData) {\r\n    let dataBody\r\n\r\n    if (formData) {\r\n      dataBody = new FormData();\r\n      Object.keys(data).map(key => {\r\n\r\n        if (!Array.isArray(data[key])) {\r\n          const isFile = data[key] && data[key].size\r\n          const isJson = typeof data[key] === 'object'\r\n\r\n          dataBody.append(key, isFile || !isJson ? data[key] : JSON.stringify(data[key]));\r\n        } else\r\n          data[key].forEach(item => {\r\n            const isFile = item && item.size\r\n            const isJson = typeof item === 'object'\r\n\r\n            dataBody.append(key, isFile || !isJson ? item : JSON.stringify(item))\r\n          })\r\n      })\r\n    } else\r\n      dataBody = JSON.stringify(data);\r\n\r\n    return fetch(`${apiUrl}${url}`, {\r\n      method: 'PUT',\r\n      headers: (formData ? {\r\n      } : {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        }),\r\n      body: dataBody\r\n    }).then(async response => {\r\n      response.payload = await response.json()\r\n      return response;\r\n    }).catch(err => err)\r\n  }\r\n\r\n  delete(url) {\r\n    return fetch(`${apiUrl}${url}`, {\r\n      method: 'DELETE'\r\n    }).then(async response => {\r\n      response.payload = await response.json()\r\n      return response;\r\n    }).catch(err => err)\r\n  }\r\n\r\n  get(url, params) {\r\n    url = new URL(`${apiUrl}${url}`);\r\n    if (params)\r\n      Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n    return fetch(url, {\r\n      method: 'GET'\r\n    }).then(async response => {\r\n      response.payload = await response.json()\r\n      return response;\r\n    }).catch(err => err)\r\n  }\r\n}\r\n\r\nexport default new Api();","export const params = {\r\n  q:'Bogota',\r\n  appid: process.env.REACT_APP_APIKEY,\r\n  lang: 'es',\r\n  units: 'metric'\r\n}","export const getTheme = (theme, temperature) => {\r\n  const limit = process.env.REACT_APP_LIMITTEMPERATURE\r\n  switch (theme) {\r\n    case 'cardFrance':\r\n      console.log(temperature, limit)\r\n      return temperature>=limit ? 'containerFranceLight' : 'containerFranceDark'\r\n      \r\n    case 'cardDay':\r\n      return temperature >= limit ? 'dayLight' : 'dayDark'\r\n    case 'cardMain':\r\n      return temperature >= limit ? 'container__mainLight' : 'container__mainDark'\r\n  }\r\n}","import React from 'react'\r\nimport { getTheme } from '../Utilities/theme'\r\nimport './CardDayStyle.css'\r\n\r\nexport const CardDay = ({\r\n  area='day', \r\n  description, \r\n  temperature='30°', \r\n  date='Abril 11, 2021', \r\n  icon='https://www.flaticon.com/svg/vstatic/svg/2698/2698213.svg?token=exp=1618177099~hmac=c08220636d79ce8305606343abef6eb9', \r\n  theme\r\n}) => {\r\n  return (\r\n    <div className={`day ${getTheme('cardDay', theme)}`} style={{gridArea: `${area}`}}>\r\n      <b>{date}</b>\r\n      <small>{description}</small>\r\n      <h2>{temperature}</h2>\r\n      <img src={icon}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { getTheme } from \"../Utilities/theme\";\r\nimport \"./CardFranceStyle.css\";\r\n\r\nexport const CardFrance = ({\r\n  country = \"Francia\",\r\n  city = \"Paris\",\r\n  temperature = \"30°\",\r\n  theme,\r\n  icon = \"https://www.flaticon.com/svg/vstatic/svg/2698/2698213.svg?token=exp=1618177099~hmac=c08220636d79ce8305606343abef6eb9\",\r\n}) => {\r\n  return (\r\n    <div className={`containerFrance ${getTheme('cardFrance', theme)}`}>\r\n      <div className=\"containerFrance__information\">\r\n        <div className=\"information__city\">\r\n          <h2>{country}</h2>\r\n          <p>{city}</p>\r\n        </div>\r\n        <img\r\n          className=\"containerFrance__imgRound\"\r\n          src=\"https://cdn.culturagenial.com/es/imagenes/torre-eiffel-cke.jpg\"\r\n        />\r\n      </div>\r\n      <div className=\"containerFrance__temperature\">\r\n        <p className=\"temperature__number\">{temperature}</p>\r\n        <img src={icon} />\r\n      </div>\r\n      <p className=\"containerFrance__text\">\r\n        Nuestros colaboradores en Francia están a esta temperatura\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","export const capitalize = (word='cargando...') => {\r\n  return word[0]?.toUpperCase() + word.slice(1);\r\n}","import React from \"react\";\r\nimport { capitalize } from \"../Utilities/capitalize\";\r\nimport { getTheme } from \"../Utilities/theme\";\r\nimport \"./CardMainStyle.css\";\r\n\r\nexport const CardMain = ({temperature, city, description='Clima', country, icon=''}) => {\r\n  return (\r\n    <div className={`container__main ${getTheme('cardMain', temperature)}`}>\r\n      <div className='container__main--temperature'>\r\n        <p className=\"gradeNumber\">{temperature}</p>\r\n        <img src={icon}/>\r\n      </div>\r\n      <p className='container__main--city'>{city},</p>\r\n      <p className='container__main--country'>{country}</p>\r\n      <strong>{capitalize(description)}</strong>\r\n      <p className='container__main--date'>{new Date(Date.now()).toDateString()}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getCountry = (country = 'CO') => {\r\n\r\n  switch (country) {\r\n    case 'CO':\r\n      return 'Colombia'\r\n      \r\n    case 'FR':\r\n      return 'Francia'\r\n  \r\n    default:\r\n      return country\r\n  }\r\n}","export const getIcon = (temperature) => {\r\n  \r\n  const limit = parseInt(process.env.REACT_APP_LIMITTEMPERATURE)\r\n  temperature = Math.round(parseFloat(temperature))\r\n\r\n  if(temperature>=limit){\r\n    return 'https://www.flaticon.com/svg/vstatic/svg/2698/2698213.svg?token=exp=1618177099~hmac=c08220636d79ce8305606343abef6eb9'\r\n  }else{\r\n    return 'https://www.flaticon.com/svg/vstatic/svg/1779/1779887.svg?token=exp=1618447995~hmac=87edf06b2a4b6689833bb900a88fe974'\r\n  }\r\n}","export const getNumberRound = (number) => {\r\n  return Math.round(number)\r\n}","import React, { useEffect, useState } from 'react'\r\nimport api from '../common/api'\r\nimport { params } from '../common/apiInfo'\r\nimport { CardDay } from '../components/CardDay'\r\nimport { CardFrance } from '../components/CardFrance'\r\nimport { CardMain } from '../components/CardMain'\r\nimport { capitalize } from '../Utilities/capitalize'\r\nimport { getCountry } from '../Utilities/getCountry'\r\nimport { getIcon } from '../Utilities/getIcon'\r\nimport { getNumberRound } from '../Utilities/getNumberRound'\r\nimport { getPronostic } from '../Utilities/getPronosthic'\r\nimport './MainStyle.css'\r\n\r\nexport const Main = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [infoFrance, setInfoFrance] = useState({});\r\n  const [infoPronosthic, setInfoPronosthic] = useState({});\r\n\r\n  useEffect(() => {\r\n     api.get('/data/2.5/weather', params).then(res => setInfo(res))\r\n     api.get('/data/2.5/weather', {...params, q:'Paris'}).then(res => setInfoFrance(res))\r\n     api.get('/data/2.5/forecast', params).then(res => setInfoPronosthic(res))\r\n  }, [])\r\n\r\n  const pronosthic = getPronostic(infoPronosthic)\r\n\r\n  return (\r\n\r\n    <div className='layer backgroundLight'>\r\n      <div className='layer__container'>\r\n        <CardMain \r\n          icon={getIcon(info.payload?.main.temp)}\r\n          temperature={`${getNumberRound(info.payload?.main.temp) || '0'}°`} \r\n          city={info.payload?.name}\r\n          country={getCountry(info.payload?.sys.country)}\r\n          description={info.payload?.weather[0][\"description\"]}\r\n          />\r\n        <CardFrance \r\n          icon={getIcon(infoFrance.payload?.main.temp)}\r\n          temperature={`${getNumberRound(infoFrance.payload?.main.temp) || '0'}°`}\r\n          city={infoFrance.payload?.name}\r\n          country={getCountry(infoFrance.payload?.sys.country)}\r\n          theme={getNumberRound(info.payload?.main.temp)}\r\n        />\r\n        <CardDay area='day1' temperature={`${getNumberRound(pronosthic.day1.temperature) || '0'}°`} description={capitalize(pronosthic.day1?.description)} icon={getIcon(pronosthic.day1?.temperature)} date={pronosthic.day1?.date} theme={getNumberRound(info.payload?.main.temp)}/>\r\n        <CardDay area='day2' temperature={`${getNumberRound(pronosthic.day2.temperature) || '0'}°`} description={capitalize(pronosthic.day2?.description)} icon={getIcon(pronosthic.day2?.temperature)} date={pronosthic.day2?.date} theme={getNumberRound(info.payload?.main.temp)}/>\r\n        <CardDay area='day3' temperature={`${getNumberRound(pronosthic.day3.temperature) || '0'}°`} description={capitalize(pronosthic.day3?.description)} icon={getIcon(pronosthic.day3?.temperature)} date={pronosthic.day3?.date} theme={getNumberRound(info.payload?.main.temp)}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const getPronostic = (json=[]) => {\r\n\r\n  let date;\r\n  const info = {day1: {}, day2: {}, day3:{}}\r\n  const list = json.payload?.list;\r\n\r\n  list?.map((item) => {\r\n    date = new Date(item.dt_txt);\r\n    const dateNow = new Date(Date.now()).getDate();\r\n\r\n    if((dateNow + 1) == date.getDate() && Object.keys(info.day1).length === 0){\r\n      info.day1 = {...info.day1,\r\n        date: date.toDateString(),\r\n        temperature: item.main.temp,\r\n        description: item.weather[0].description\r\n      }\r\n    }else if ((dateNow + 2) == date.getDate() && Object.keys(info.day2).length === 0){\r\n      info.day2 = {...info.day2,\r\n        date: date.toDateString(),\r\n        temperature: item.main.temp,\r\n        description: item.weather[0].description\r\n      }\r\n    }else if((dateNow + 3) == date.getDate() && Object.keys(info.day3).length === 0){\r\n      info.day3 = {...info.day3,\r\n        date: date.toDateString(),\r\n        temperature: item.main.temp,\r\n        description: item.weather[0].description\r\n      }\r\n    }\r\n  });\r\n  return info;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Main } from './layouts/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}